name: CI-CD-Pipeline-to-AWS-ElastickBeanstalk
env:
  EB_PACKAGE_S3_BACKET_NAME: ak-app-flask-packages
  EB_APPLICATION_NAME : "Flask"
  EB_ENVIRONMENT_NAME : "Flask-env"
  DEPLOY_PACKAGE_NAME : "flask_app_${{ github.sha }}.zip"
  AWS_REGION_NAME     : "eu-west-2"

on:
  push:
    branches: 
      - main
      
jobs:
  my_ci_part:
    runs-on: ubuntu-latest
    
    steps:
      - name: Git clone our repo
        uses: actions/checkout@v1
      
      - name: Greate ZIP deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
          
      - name: Configure my AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}
          
      - name: Copy Deploymant package to S3 bucket    
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }}  s3://${{ env.EB_PACKAGE_S3_BACKET_NAME }}/
        
      - name: Print Happy Message for CI finish
        run: echo "CI Pipline part Finished successfully!"


  my_cd_part:
    runs-on: ubuntu-latest
    needs: [my_ci_part]
    
    steps:
      - name: Configure my AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}
    
    
      - name: Create new ElasticBeanstalk Application
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BACKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "Ver-${{ github.sha }}" \
          --description "CommitSHA-${{ github.sha }}"
          
          
      - name: Deploy new ElasticBeanstalk Aplication Version
        run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}"
        
        
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
    
    
